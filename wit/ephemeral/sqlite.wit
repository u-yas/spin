// A handle to an open sqlite instance
type connection = u32

// The set of errors which may be raised by functions in this interface
variant error {
  // The host does not recognize the database name requested.
  no-such-database,
  // The requesting component does not have access to the specified database (which may or may not exist).
  access-denied,
  // The provided connection is not valid
  invalid-connection,
  // Some implementation-specific error has occurred (e.g. I/O)
  io(string)
}

// Open a connection to a named database instance.
//
// If `database` is "default", the default instance is opened.
//
// `error::no-such-database` will be raised if the `name` is not recognized.
open: func(name: string) -> expected<connection, error>

// Execute a statement
execute: func(conn: connection, statement: string, parameters: list<value>) -> expected<unit, error>

// Query data
query: func(conn: connection, query: string, parameters: list<value>) -> expected<list<row>, error>

// Close the specified `connection`.
close: func(conn: connection)

// A database row
record row {
  values: list<column-value>,
}

// A single column's value
record column-value {
  name: string,
  value: value
}

variant value {
  integer(s64),
  real(float64),
  text(string),
  blob(list<u8>),
  null
}
